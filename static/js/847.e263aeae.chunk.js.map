{"version":3,"file":"static/js/847.e263aeae.chunk.js","mappings":"wNAyDA,UApDqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAGR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAGMC,EAAc,mCAAG,sGACFC,MAAM,GAAD,OAJT,gCAIS,iBAAqBP,EAArB,oBAHX,qCAEQ,cACfQ,EADe,gBAEMA,EAAKC,OAFX,OAEfC,EAFe,OAIrBN,EAAgBM,GAJK,2CAAH,qDAMpBJ,IAAiBK,MAAMC,QAAQC,MAChC,GAAE,CAACb,IAEJ,IAAMc,EAAQC,KAAKC,KAAiC,GAA5Bb,EAAac,cAGrC,OACE,6BAEE,gBAAKC,IAAI,sCAAsCC,IAAI,MACnD,4BACE,wBAAKhB,EAAaiB,kBAClB,wCAAgBN,EAAhB,QACA,sCACA,uBAAIX,EAAakB,YACjB,uCAGF,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAKT,C,sBCvDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOrB,GAEP,YADAe,EAAOf,EAET,CAEIoB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/MovieDetails.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link, Outlet, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\n// import { BackLink } from '../components/BackLink';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  //   const location = useLocation();\n  //   const backLinkHref = location.state?.from ?? '/';\n  const [movieFetched, setMovieFetched] = useState({});\n\n  useEffect(() => {\n    const fetchUrl = 'https://api.themoviedb.org/3/';\n    const apiKey = '93dad7f5c3f08e509beef896c33679a7';\n\n    const fetchMovieById = async () => {\n      const data = await fetch(`${fetchUrl}movie/${movieId}?api_key=${apiKey}`);\n      const movieFromApi = await data.json();\n\n      setMovieFetched(movieFromApi);\n    };\n    fetchMovieById().catch(console.error);\n  }, [movieId]);\n\n  const score = Math.ceil(movieFetched.vote_average * 10);\n  // const genres = movieFetched.genres.map(genre => genre.name).join(' ');\n\n  return (\n    <main>\n      {/* <BackLink to={backLinkHref}>Go back</BackLink> */}\n      <img src=\"https://via.placeholder.com/960x240\" alt=\"\" />\n      <div>\n        <h2>{movieFetched.original_title}</h2>\n        <p>User score: {score}%</p>\n        <h4>Overview</h4>\n        <p>{movieFetched.overview}</p>\n        <h5>Genres</h5>\n        {/* <p>{genres}</p> */}\n      </div>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieFetched","setMovieFetched","useEffect","fetchMovieById","fetch","data","json","movieFromApi","catch","console","error","score","Math","ceil","vote_average","src","alt","original_title","overview","to","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}